name: Test Build

permissions:
  contents: read
  id-token: write
  pull-requests: write

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Dockerhub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set Docker Builder
        uses: docker/setup-buildx-action@v1
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./docker/Dockerfile
          push: true
          tags: piriquito/k8s-from-secrets-vault:develop
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'
      - name: Install dependencies
        run : go mod download
        working-directory: ./src
      - name: Install go-junit-report
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
        working-directory: ./src
      - name: Run tests and generate report
        run: |
          go test -v -coverprofile=coverage.out ./... 2>&1 | go-junit-report > ./test_report.xml
        working-directory: ./src
      - name: Test Summary
        uses: test-summary/action@v1
        with:
          paths: "./src/test_report.xml"
          output: "./src/test-summary.md"
          show: "all"
        if: always()
      - name: Comment on pull request
        uses: mshick/add-pr-comment@v2
        if: always()
        continue-on-error: true
        with:
          message-path: ./src/test-summary.md
      - name: Fail on test failure
        run: |
          if [ -f ./src/test_report.xml ]; then
            if grep -q "failures=\"0\""; then
              echo "All tests passed"
            else
              echo "Some tests failed"
              exit 1
            fi
          else
            echo "No test report found"
            exit 1
          fi
  integration-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Integration Test
    environment: dev
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Run test action for configmap
        uses: ./
        with:
          imagelabel: 'develop'
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ vars.NAMESPACE }}
          resource-name: ${{ vars.RESOURCE_NAME }}
          resource-type: 'configmap'
          vault-url: ${{ secrets.VAULT_URL }}
          engine-name: ${{ secrets.SECRET_ENGINE }}
          secret-name: ${{ vars.SECRET_NAME }}
          vault-auth-token: '${{ secrets.VAULT_TOKEN }}'
      - name: Run test action for secrets
        uses: ./
        with:
          imagelabel: 'develop'
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ vars.NAMESPACE }}
          resource-name: ${{ vars.RESOURCE_NAME }}
          resource-type: 'configmap'
          vault-url: ${{ secrets.VAULT_URL }}
          engine-name: ${{ secrets.SECRET_ENGINE }}
          secret-name: ${{ vars.SECRET_NAME }}
          vault-auth-token: '${{ secrets.VAULT_TOKEN }}'